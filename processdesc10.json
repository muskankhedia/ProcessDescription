[{"Process":{"Bugs":"Please report bugs to the developer mailing list: http:\/\/0install.net\/support.html","Description":"0alias is deprecated. Use '0install add' instead.","See Also":"0install(1), 0launch(1), 0desktop(1) The Zero Install web-site: http:\/\/0install.net","License":"Copyright © 2012 Thomas Leonard. You may redistribute copies of this program under the terms of the GNU Lesser General Public License.","Author":"The Zero Install Injector was created by Thomas Leonard.","Synopsis":"0alias ALIAS [INTERFACE [MAIN]]","Process Name":"0alias","Link":"https:\/\/linux.die.net\/man\/1\/0alias","Name":"0alias -- create quick scripts to run 0launch","Referenced By":"0store(1) Site Search Library linux docs linux man pages page load time Toys world sunlight moon phase trace explorer"}},{"Process":{"Bugs":"Please report bugs to the developer mailing list: http:\/\/0install.net\/support.html","Description":"0desktop can be used to create launchers for Zero Install applications in desktop environments supporting the freedesktop.org menu specification (e.g. GNOME and KDE). If the URI of a Zero Install application is given, this application is added. Without a URI, a dialog box is displayed prompting the user to specify what to add. On success, a launcher is added to the user's menu which, when invoked, runs the application using the command \"0launch URI\".","See Also":"0alias(1), 0launch(1) The Zero Install web-site: http:\/\/0install.net Site Search Library linux docs linux man pages page load time Toys world sunlight moon phase trace explorer","License":"Copyright © 2010 Thomas Leonard. You may redistribute copies of this program under the terms of the GNU Lesser General Public License.","Author":"Zero Install was created by Thomas Leonard.","Files":"~\/.local\/share\/applications Default directory in which the .desktop file for the new launcher is created.","Synopsis":"0destkop [ URI ] 0destkop --manage","Process Name":"0desktop","Link":"https:\/\/linux.die.net\/man\/1\/0desktop","Name":"0desktop -- add programs to the desktop environment"}},{"Process":{"Bugs":"Please report bugs to the developer mailing list: http:\/\/0install.net\/support.html","Description":"Zero Install is a decentralised cross-distribution software installation system. Programs and libraries are identified by URIs, and there is no need for a central repository. Zero Install ensures that packages cannot conflict with each other and that programs can be shared between mutually untrusting users. See the web-site for more information: http:\/\/0install.net\/ The simplest case is to ask 0install to run a program, given its URI. For example: 0install run http:\/\/rox.sourceforge.net\/2005\/interfaces\/Edit The first time you do this, details about available versions of the program are downloaded and cached, along with details about any libraries it depends on. Zero Install will run a solver to select the best version of each component to use. For example, it will select binaries that are compatible with your CPU and operating system, in your preferred language, and marked \"stable\" (by default). If $DISPLAY is set, 0install will display a window where you can confirm (or change) the selected versions. It will then download the corresponding archives for those versions and store them in the cache too. Each package unpacks to its own directory. Finally, 0install will launch the program, setting environment variables to let it locate its libraries.","Applications":"An application provides an easy way to run a program without typing the full URL each time. 0install add NAME URI Creates a new application called NAME (which can be whatever you want) to run the program URI. A directory (by default, ~\/.config\/0install.net\/apps\/NAME) is created to record the current selections, as would be produced by \"0install select --xml URI\". A launcher command (also called NAME) will be created in $PATH to provide an easy way to run the application. For example, to add and run ROX-Filer: $ 0install add rox http:\/\/rox.sourceforge.net\/2005\/interfaces\/ROX-Filer $ rox If additional requirements are given (as for \"0install select\", e.g. --before), they are stored with the application and apply to all updates. 0install show NAME | SELECTIONS Show the current selections for this application (or the contents of the given selections file). By default, the output is in the same format as for \"0install select\", and the --xml option has the same effect. -r, --root-uri Just display the root interface URI (e.g. the URI passed to \"0install add\" when this application was created). 0install update NAME The feeds used to make the selections are updated and a new set of selections is generated and saved into the application's directory. Even if you don't run this command explicitly, 0install will check for updates if you run the program and it hasn't been updated for a while. This happens in the background and does not delay starting the program. If additional requirements are given (as for \"0install select\", e.g. --before), they update the requirements stored with the application and apply to this and future updates. 0install whatchanged NAME Show the differences between the current and previous selections for this application. Various times may also be displayed: \"Last checked\" is the last time we successfully checked for updates (even if none was found), \"Last attempted update\" is the last time we tried to check for updates, and \"Last update\" is the last time changes were found. If \"Last attempted update\" is shown, then either the last updated failed or an update is currently in progress. By default, only changes that resulted in a different version being selected are shown. To see all changes, use --full. Note that at most one set of selections is saved per day. 0install destroy NAME The application NAME is deleted, along with any launchers added for it.","Debugging Tips":"To debug 0install itself, use the --verbose and --console options. For example: $ 0install -vvc run http:\/\/myprog To trace or debug programs run by 0install, use the --wrapper option. For example, to run myprog --help, displaying all calls to open(2): $ 0install run --wrapper=\"strace -e open\" http:\/\/myprog --help To run the application under the gdb debugger: $ 0install run --wrapper=\"gdb --args\" http:\/\/myprog - - help","See Also":"0store(1), 0launch(1) The Zero Install web-site: http:\/\/0install.net","License":"Copyright © 2013 Thomas Leonard. You may redistribute copies of this program under the terms of the GNU Lesser General Public License.","Sub-commands":"0install select [OPTIONS] URI Select a version of the program identified by URI, and compatible versions of all of its dependencies. The information about available versions is downloaded if it's not yet in the cache. The URI can be an HTTP URL, such as 'http:\/\/site\/program.xml' or a local path name like 'file:\/\/\/path\/to\/program.xml'. For HTTP URLs, the remote file is a signed XML document. If the key is not known and trusted, you will be prompted to accept it first. Local feed files are not signed (any signature will be ignored). You can also specify a local selections document, as created previously using the --xml option, rather than a feed. In that case, 0install simply uses those versions without running the solver. After selecting (but not downloading) a set of versions, the selection is displayed in a human-readable format. Use --xml to get machine-readable output. If a set of versions cannot be selected using the cached information, 0install will check for updates first. If a set of versions can be selected based on the currently-cached information, but that information is getting stale, 0install will immediately return the current selection and will also start a background process to check for updates. The 'freshness' configuration setting controls when cached information is considered to be stale. Options for select: --before=VERSION Select a version earlier than VERSION (i.e. force the use of an old version of the program). You can only restrict the version of the program itself using this option, not the version of any dependencies. --command=COMMAND Some programs provide multiple commands. This selects which one you want. Common values are 'run' (the default), 'test' (used by 0test) and 'compile' (used by 0compile). You can also use --command=\"\" if you don't want to run any command (for example, if the package contains data rather than a program). --message=MESSAGE If we show a dialog box for the download, display MESSAGE to the user to explain why the download is needed. --not-before=VERSION The selected version must not be earlier than VERSION. e.g. if you want to run version 2.0 or later, use --not-before=2.0. --refresh Download a fresh copy of all used feeds before selecting. Normally, cached copies will be used if available (checking for updates later, in the background). --source Select source code rather than a binary. This is used internally by '0compile'. --version=RANGE Require a version of the main program within the given range. This can be a simple number (e.g. --version=2.3) or a range (e.g. --version=2.3..!2.7). For ranges, either end may be omitted. The \"!\" indicates that the range excludes the final value. Alternatives can be separated by \"|\", e.g. \"2.6..!3 | 3.2..\" (allows 2.6, 2.7, 3.2, etc, but not 2.5 or 3.0). --version-for=URI RANGE Specifies the range (as for --version) for any library or sub-component. If URI is the URI of the main program then this is equivalent to using --version. --xml Print the set of chosen implementations as an XML document to stdout. This can be used later with the 'download' and 'run' sub-commands. 'select' returns an exit status of zero if it selected a set of versions, and a status of 1 if it could not find a consistent set. 0install download [OPTIONS] URI This behaves similarly to '0install select', except that it also downloads the selected versions if they are not already cached. Unlike 'select', it does not print the selected versions by default. All options for 'select' can also be used for 'download'. In addition, these options are available: --show Print the selected versions in a human-readable format to stdout. 'download' returns an exit status of zero if it selected a suitable set of versions and they are now all downloaded and in the cache. It returns a status of 1 otherwise. 0install run [OPTIONS] URI [ARGS] This behaves similarly to '0install download', except that it also runs the program after ensuring it is in the cache. To avoid having to keep typing the full URI, use the '0install add' command to create shortcuts to run your programs. All options for 'select' can also be used for 'run' except for --xml. In addition, these options are available: -m, --main=MAIN Run the specified executable instead of the default. If MAIN starts with '\/' then the path is relative to the implementation's top-level directory, whereas otherwise it is relative to the directory containing the default MAIN program. For example, if the default MAIN is bin\/svn then using --main=svnadmin will run ...\/bin\/svnadmin instead. This option has been largely superseded by the newer --command option. -w, --wrapper=WRAPPER Instead of executing the chosen program directly, run WRAPPER PROGRAM ARGS. This is useful for running debuggers and tracing tools on the program (rather than on 0install!). Note that the wrapper is executed in the environment selected by the program; hence, this mechanism cannot be used for sandboxing. See the DEBUGGING section below. Note that any options after 'URI' will be passed to the program being run rather than being interpreted by 0install. 'run' returns an exit status of 1 if the download step failed. Otherwise, the exit status will be the exit status of the program being run. 0install update [OPTIONS] URI Check for updates to the program and download them if found. This is similar to 0install download --refresh, except that it prints information about whether any changes were found. The options are the same as for 'select'. 0install import FEED Import a feed from a local file, as if it had been downloaded from the network. This is useful when testing a feed file, to avoid uploading it to a remote server in order to download it again. The file must have a trusted digital signature, as when fetching from the network. It is also useful when installing a feed from a CD or similar. Note: to create a full bundle, for archiving or distribution on CD, see 0export(1). 0install add-feed [INTERFACE] FEED Register an additional source of implementations (versions) of a program. For example, when you check out a developer version of a project, it may contain an XML feed file. To add this version to the list of available versions, use 'add-feed' on the XML file. The file is not copied, so you don't need to re-add the feed each time it is updated. You will probably also want to set the 'help_with_testing' configuration option to ensure that testing versions are selected by default. Note that if you just want to run the program, you can invoke 0install on the feed file directly (without using 'add-feed'). This will force the it to use that version, but won't affect what happens when you run it using the URI as normal. Use 'add-feed' when you want to use the developer version even when using the URI, or if the program is a library (and thus referenced by URI by other programs). 0install remove-feed [INTERFACE] FEED Un-register a feed, reversing the effect of 'add-feed'. If INTERFACE is not given, you will be prompted to choose which INTERFACE to remove it from. 0install list-feeds URI List all extra feeds added to URI using 'add-feed'. 0install list PATTERN List all known interface (program) URIs. If a search term is given, only URIs containing that string are shown (case insensitive). 0install config [NAME [VALUE]] View or change configuration settings. With no arguments, '0install config' displays all configuration settings. With one argument, it displays the current value of the named setting. With two arguments, it sets the setting to the given value. 0install man COMMAND Show the man-page of the given command. If the single argument COMMAND is a launcher script (created by \"0install add\") then the man-page is searched for by 0install, otherwise the arguments are passed through directly to the system's man command. This allows you to do: alias man=\"0install man --\" 0install digest DIRECTORY | ARCHIVE [EXTRACT] Calculate the secure hash of an implementation. This is a unique \"fingerprint\" of a directory and all the files and subdirectories it contains. When publishing a program using 0install, this value must be placed in the XML file. -m, --algorithm=HASH Select the secure hash function to be used. Supported values are \"sha1new\" (the default), \"sha256\" and \"sha256new\". If an archive is given then the hash is for the directory that would be created if the archive were unpacked (or the EXTRACT subdirectory of it, if one is specified). -m, --manifest -d, --digest These options control whether to display the manifest itself (one line for each file or directory) or the manifest's digest (or both). If neither option is given, the digest is displayed. 0install --version This can be used (without any command) the get version of 0install itself.","Synopsis":"Downloading and running: 0install select URI 0install download URI 0install run URI [ARG]... 0install update URI Applications: 0install add NAME URI 0install show NAME 0install update NAME 0install whatchanged NAME 0install destroy NAME Other commands: 0install config [NAME [VALUE]] 0install import FEED 0install list PATTERN 0install add-feed [INTERFACE] FEED 0install remove-feed [INTERFACE] FEED 0install list-feeds URI 0install man COMMAND 0install digest DIRECTORY | ARCHIVE [EXTRACT]","Process Name":"0install","Name":"0install -- a decentralised software installation system","Referenced By":"0alias(1) Site Search Library linux docs linux man pages page load time Toys world sunlight moon phase trace explorer","Environment Variables":"XDG_* The configuration and cache directories can be changed using XDG_CONFIG_HOME, XDG_CONFIG_DIRS, XDG_CACHE_HOME and XDG_CACHE_DIRS, as usual. ZEROINSTALL_PORTABLE_BASE If this is set, then the XDG_ variables are ignored and the configuration and cache are stored in $ZEROINSTALL_PORTABLE_BASE\/config and $ZEROINSTALL_PORTABLE_BASE\/cache instead. ZEROINSTALL_EXTERNAL_STORE When 0install wants to add an archive to the cache, it calls this program instead of doing it itself. This is used internally on Windows to connect to some .NET code. It may change in future.","Global Options":"The first non-option argument to 0install is the particular sub-command you want to perform; these are described in detail in the next section. However, there are some options that apply to all operations. These are: -c, --console Never use the GUI. Normally, 0install switches to graphical mode if it needs to download anything from the network (unless DISPLAY is not set). --dry-run Do not save any changes to disk, and do not actually run the program. Instead, just print out the changes that would have been made. Note that, as 0install is a very safe system, there is generally no need to use this option. However, it can be useful as a learning aid or for testing. -h, --help Show the built-in help text. -o, --offline Run in off-line mode, overriding the default setting. This prevents 0install from checking for updates, and from downloading updates even if it knows about them. -v, --verbose More verbose output. Use twice for even more verbose output. --with-store=DIR Append a directory to the list of implementation caches. Each sub-directory of DIR contains the contents of one version of a program or library.","Author":"Zero Install was created by Thomas Leonard, with help from many others. See the Git log for details.","Files":"Configuration files (see freedesktop.org basedir spec): ~\/.config\/0install.net\/injector\/global Global configuration settings. ~\/.config\/0install.net\/injector\/trustdb.xml List of trusted keys. ~\/.config\/0install.net\/injector\/feeds Per-feed information (e.g. time of last check). ~\/.config\/0install.net\/injector\/interfaces Per-interface settings (preferred stability and any extra feeds that have been registered). Cached data (can be re-downloaded if lost): ~\/.cache\/0install.net\/interfaces Downloaded cached feed files. ~\/.cache\/0install.net\/implementations Downloaded cached implementations, indexed by manifest digest. See the 0store(1) man page for more information.","Link":"https:\/\/linux.die.net\/man\/1\/0install"}},{"Process":{"Bugs":"Please report bugs to the developer mailing list: http:\/\/0install.net\/support.html","Command-line Options":"0launch takes many of the same options as \"0install run\". This page just lists the differences: -d, --download-only Deprecated. Use \"0install download\" instead. -f, --feed Deprecated. Use \"0install add-feed\" or \"0install remove-feed\" instead. --get-selections Deprecated. Use \"0install select\" instead. -i, --import Deprecated. Use \"0install import\" instead. -l, --list Deprecated. Use \"0install list\" instead. --select-only Deprecated. Use \"0install select\" instead. --set-selections=FILE Deprecated. Just give FILE as the PROGRAM. --show Deprecated. Use \"0install select\" instead.","Description":"0launch runs the given program. PROGRAM is either a URL in the form 'http:\/\/site\/program.xml' or a local path name like '\/path\/to\/program.xml'. If the program is not already on your computer, 0launch downloads information about which versions are available, and lets you choose one to download. It will also (automatically) do the same for any libraries the program needs. Note that much of the functionality that was originally in 0launch has now moved to 0install(1). 0launch PROGRAM ARGS is roughly equivalent to 0install run PROGRAM ARGS See the 0install(1) man-page for more information.","Debugging Tips":"To debug 0launch itself, use the --verbose and --console options. For example: $ 0launch -vvc http:\/\/myprog To trace or debug programs run by 0launch, use the --wrapper option. For example, to run myprog --help, displaying all calls to open(2): $ 0launch --wrapper=\"strace -e open\" http:\/\/myprog - - help If your program is interpreted (e.g. a Python program), and you wish to debug the interpreter running it, you can do it like this: $ 0launch --wrapper=\"gdb --args python\" http:\/\/myprog --help","See Also":"0install(1), 0store(1) The Zero Install web-site: http:\/\/0install.net","License":"Copyright © 2011 Thomas Leonard. You may redistribute copies of this program under the terms of the GNU Lesser General Public License.","Synopsis":"0launch [OPTION]... PROGRAM [ARG]...","Process Name":"0launch","Name":"0launch -- download and run programs by URL","Referenced By":"0alias(1), 0desktop(1) Site Search Library linux docs linux man pages page load time Toys world sunlight moon phase trace explorer","Author":"Zero Install was created by Thomas Leonard.","Files":"Configuration files (see freedesktop.org basedir spec): ~\/.config\/0install.net\/injector\/global Global configuration settings. ~\/.config\/0install.net\/injector\/trustdb.xml List of trusted keys. ~\/.config\/0install.net\/injector\/interfaces Per-interface settings, and extra feeds. Cached data (can be re-downloaded if lost): ~\/.cache\/0install.net\/interfaces Downloaded cached feed files. ~\/.cache\/0install.net\/implementations Downloaded cached implementations, indexed by manifest digest. See the 0store(1) man page for more information.","Link":"https:\/\/linux.die.net\/man\/1\/0launch","Examples":"When a program is available using 0launch, it will have an associated URL. To run the program, simply invoke 0launch with this as an argument: 0launch http:\/\/rox.sourceforge.net\/2005\/interfaces\/Edit The first time you do this, details about the program are downloaded and cached, and you will be prompted to confirm the versions to use. In future, the program will run directly from the cache without confirmation. To check for new versions: 0launch --refresh http:\/\/rox.sourceforge.net\/2005\/interfaces\/Edit To avoid having to keep typing the full URI, use the '0install add' command to create shortcuts to run your programs."}},{"Process":{"Add":"To add a directory to the store (makes a copy): 0store add sha256=XXX directory To add an archive to the store: 0store add sha256=XXX archive.tgz To add a subdirectory of an archive to the store: 0store add sha256=XXX archive.tgz subdir The actual digest is calculated and compared to the given one. If they don't match, the operation is rejected.","Bugs":"Please report bugs to the developer mailing list: http:\/\/0install.net\/support.html","Command-line Options":"-h, --help Show the built-in help text. -v, --verbose More verbose output. Use twice for even more verbose output. -V, --version Display version information.","Description":"0store provides access to the low-level implementation cache. Normally, the cache is updated automatically using 0launch(1).","See Also":"0alias(1), 0launch(1), 0store-secure-add(1) The Zero Install web-site: http:\/\/0install.net","Optimise":"To hard-link duplicate files together to save space: 0store optimise [CACHE] This reads in all the manifest files in the cache directory (~\/.cache\/0install.net\/implementations by default) and looks for duplicates (files with the same permissions, modification time and digest). When it finds a pair, it deletes one and replaces it (atomically) with a hard-link to the other. Implementations using the old 'sha1' algorithm are not optimised.","License":"Copyright © 2010 Thomas Leonard. You may redistribute copies of this program under the terms of the GNU Lesser General Public License.","Manage":"To open a window showing the contents of the cache: 0store manage You can use this to delete versions of programs you no longer need. However, this doesn't remove any launchers you added (trying to launch the program will prompt you to download the missing files again). For that, try: 0desktop --manage","Manifest":"To generate the manifest for a directory structure: 0store manifest DIRECTORY [ALGORITHM] The manifest lists every file and directory in the tree, along with the digest of each file, thus uniquely identifying that particular set of files. After the manifest, the last line gives the digest of the manifest itself. This value is needed when creating feed files. However, the 0publish command will automatically calculate the required digest for you and add it to a feed file. See the packager's guide on the Zero Install web site for details. Supported algorithms are 'sha1' (supported by all versions), 'sha1new' (requires injector 0.20 or later) and 'sha256' (requires injector 0.20 or later AND the Python hashlib module).","Synopsis":"0store add DIGEST DIRECTORY 0store add DIGEST ARCHIVE [ EXTRACT ] 0store audit [ DIRECTORY ... ] 0store copy DIRECTORY [ DIRECTORY ] 0store find DIGEST 0store list 0store manifest DIRECTORY [ ALGORITHM ] 0store optimise [ CACHE ] 0store verify ( DIGEST | DIRECTORY ) 0store manage","Process Name":"0store","Name":"0store -- manage the implementation cache","Referenced By":"0install(1) Site Search Library linux docs linux man pages page load time Toys world sunlight moon phase trace explorer","Audit":"Verifies every implementation in each of the given cache directories, or in all of the default cache directories if no arguments are given. This will detect any packages which have been tampered with since they were unpacked. If 0store itself could have been modified by an attacker, mount the suspect file-system on a known-good machine and run that machine's 0store on the mounted cache directory. See the \"verify\" command below for details of the verification performed on each package.","Copy":"To copy an implementation (a directory with a name in the form \"algorithm=value\"), use the copy function. This is similar to performing a normal recursive directory copy followed by a 0store verify to check that the name matches the contents. E.g.: 0store copy ~someuser\/.cache\/0install.net\/implementations\/sha256=XXX \/var\/cache\/0install.net\/implementations\/","Find":"To find the path of a stored item: 0store find sha256=XXX","Author":"The Zero Install Injector was created by Thomas Leonard.","List":"See the list of implementation caches currently configured: 0store list To add directories to this list, add them to your 'implementation-dirs' configuration file.","Verify":"To check that an item is stored correctly: 0store verify \/path\/to\/sha256=XXX This calculates the manifest of the directory and checks that its digest matches the directory's name. It also checks that it matches the digest of the .manifest file inside the directory. If the .manifest doesn't correspond to the current tree, it displays a list of the differences (in unified diff format).","Files":"~\/.cache\/0install.net\/implementations Cached implementations, indexed by manifest digest. ~\/.config\/0install.net\/injector\/implementation-dirs List of system cache directories, one per line.","Link":"https:\/\/linux.die.net\/man\/1\/0store"}},{"Process":{"Bugs":"This program is EXPERIMENTAL. It has not been audited. Do not use it yet in security-critial environments. The env_reset line in sudoers may not be required. sudo(1) seems to do it automatically. If sudo let us check whether we could call a command then we could switch to using it automatically, instead of needing to add the helper script. Currently, sudo delays for one second and writes to auth.log if we try to use this system when it hasn't been set up. Please report bugs to the developer mailing list: http:\/\/0install.net\/support.html","Description":"This command imports the current directory into the system-wide shared Zero Install cache, as \/var\/cache\/0install.net\/implementations\/DIGEST. This allows a program downloaded by one user to be shared with other users. The current directory must contain a file called '.manifest' listing all the files to be added (in the format required by DIGEST), and this file must have the given digest. If not, the import is refused. Therefore, it is only possible to add a directory to the cache if its name matches its contents. It is intended that it be safe to grant untrusted users permission to call this command with elevated privileges. To set this up, see below.","See Also":"0store(1) The Zero Install web-site: http:\/\/0install.net Site Search Library linux docs linux man pages page load time Toys world sunlight moon phase trace explorer","License":"Copyright © 2009 Thomas Leonard. You may redistribute copies of this program under the terms of the GNU Lesser General Public License.","Author":"Zero Install was created by Thomas Leonard.","Setting Up Sharing":"To enable sharing, the system administrator should follow these steps: Create a new system user to own the cache: adduser - - system zeroinst Create the shared directory, owned by this new user: mkdir \/var\/cache\/0install.net chown zeroinst \/var\/cache\/0install.net Use visudo(8) to add these lines to \/etc\/sudoers: Defaults>zeroinst env_reset,always_set_home ALL ALL=(zeroinst) NOPASSWD: \/usr\/bin\/0store-secure-add Create a script called 0store-secure-add-helper in PATH to call it. This script must be executable and contain these two lines: #!\/bin\/sh exec sudo -S -u zeroinst \/usr\/bin\/0store-secure-add \"$@\" < \/dev\/null The other Zero Install programs will call this helper script automatically.","Files":"\/var\/cache\/0install.net\/implementations System-wide Zero Install cache.","Synopsis":"0store-secure-add DIGEST","Process Name":"0store-secure-add","Link":"https:\/\/linux.die.net\/man\/1\/0store-secure-add","Name":"0store-secure-add -- add an implementation to the system cache"}}]